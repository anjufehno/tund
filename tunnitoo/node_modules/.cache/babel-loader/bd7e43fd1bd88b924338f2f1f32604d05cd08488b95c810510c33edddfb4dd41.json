{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lizak\\\\Desktop\\\\Tund\\\\tunnitoo\\\\src\\\\frontend\\\\components\\\\Maths.js\",\n  _s = $RefreshSig$();\nimport { Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Maths = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const changeCount = amount => setCount(previousCount => previousCount + amount);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), [-100, -10, -1, 1, 10, 100].map(number => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => changeCount(number),\n      sx: {\n        marginBottom: 1\n      },\n      children: [\"Press me \", number]\n    }, number, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => setTimeout(() => setCount(previousCount => previousCount + 10), 3000),\n      children: \"Press me async +10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Maths, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Maths;\nexport default Maths;\nvar _c;\n$RefreshReg$(_c, \"Maths\");","map":{"version":3,"names":["Button","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Maths","_s","count","setCount","changeCount","amount","previousCount","children","fileName","_jsxFileName","lineNumber","columnNumber","map","number","variant","onClick","sx","marginBottom","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/lizak/Desktop/Tund/tunnitoo/src/frontend/components/Maths.js"],"sourcesContent":["import { Button } from \"@mui/material\"\r\nimport React, { useState } from \"react\"\r\n\r\nconst Maths = () => {\r\n  const [count, setCount] = useState(0)\r\n\r\n  const changeCount = amount =>\r\n    setCount(previousCount => previousCount + amount)\r\n\r\n  return (\r\n    <>\r\n      <h2>{count}</h2>\r\n      {[-100, -10, -1, 1, 10, 100].map(number => (\r\n        <Button\r\n          key={number}\r\n          variant=\"contained\"\r\n          onClick={() => changeCount(number)}\r\n          sx={{ marginBottom: 1 }}\r\n        >\r\n          Press me {number}\r\n        </Button>\r\n      ))}\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() =>\r\n          setTimeout(() => setCount(previousCount => previousCount + 10), 3000)\r\n        }\r\n      >\r\n        Press me async +10\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Maths"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMS,WAAW,GAAGC,MAAM,IACxBF,QAAQ,CAACG,aAAa,IAAIA,aAAa,GAAGD,MAAM,CAAC;EAEnD,oBACER,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAKL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACf,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,iBACrChB,OAAA,CAACJ,MAAM;MAELqB,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAACS,MAAM,CAAE;MACnCG,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAV,QAAA,GACzB,WACU,EAACM,MAAM;IAAA,GALXA,MAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAML,CACT,CAAC,eACFd,OAAA,CAACJ,MAAM;MACLqB,OAAO,EAAC,WAAW;MACnBC,OAAO,EAAEA,CAAA,KACPG,UAAU,CAAC,MAAMf,QAAQ,CAACG,aAAa,IAAIA,aAAa,GAAG,EAAE,CAAC,EAAE,IAAI,CACrE;MAAAC,QAAA,EACF;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAAAV,EAAA,CA7BKD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA+BX,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}